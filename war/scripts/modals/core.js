define(["modals/modals","config"],function(e,t){e.factory("Core",["$rootScope","$resource","$q","Storage",function(e,n,r,i){var s=n(),o=n(t.host+"/accounts/contactinfos/:id",{},{list:{method:"GET",params:{},isArray:!0},get:{method:"GET",params:{id:""}},create:{method:"POST",params:{}},update:{method:"PUT",params:{id:""}},remove:{method:"DELETE",params:{id:""}}}),u=n(t.host+"/products/verifyme/:action",{},{initiate:{method:"POST",params:{action:"initiate"}},confirm:{method:"POST",params:{action:"verify"}}}),a=n(t.host+"/settings/notifications/:id",{},{list:{method:"GET",params:{},isArray:!0},get:{method:"GET",params:{id:""}},create:{method:"POST",params:{}},update:{method:"PUT",params:{id:""}},remove:{method:"DELETE",params:{id:""}}}),f=n(t.host+"/accounts/groups/:id",{},{list:{method:"GET",params:{},isArray:!0},get:{method:"GET",params:{id:""}},update:{method:"PUT",params:{id:""}}}),l=n(t.host+"/log",{},{list:{method:"GET",params:{},isArray:!0}});return s.prototype.logs={local:function(){return angular.fromJson(i.get("settings"))},list:function(){var e=r.defer();return l.query(function(t){e.resolve(t)},function(t){e.resolve({error:t})}),e.promise}},s.prototype.settings={local:function(){return angular.fromJson(i.get("settings"))},list:function(){var e=r.defer();return a.query(function(t){i.add("settings",angular.toJson(t)),e.resolve(t)},function(t){e.resolve({error:t})}),e.promise},update:function(e){var t=r.defer();return a.update({id:e.id},{targetContactInfos:e.target},function(e){i.add("settings",angular.toJson(e)),t.resolve(e)},function(e){t.resolve({error:e})}),t.promise},save:function(t){var n=r.defer(),i=[],o={sms:[],email:[]};return t.added.sms.status?o.sms=t.added.sms.value:t.removed.sms||(o.sms=t.changed.sms.value),t.added.email.status?o.email=t.added.email.value:t.removed.email||(o.email=t.changed.email.value),o.sms&&i.push(s.prototype.settings.update({id:e.data.settings.sms.id,target:o.sms})),o.email&&i.push(s.prototype.settings.update({id:e.data.settings.email.id,target:o.email})),r.all(i).then(function(e){n.resolve(e)}),n.promise}},s.prototype.connections={local:function(){return angular.fromJson(i.get("connections"))},list:function(){var e=r.defer();return o.list(function(t){i.add("connections",angular.toJson(t)),e.resolve(t)},function(t){e.resolve({error:t})}),e.promise},get:function(e){var t=r.defer();return o.get({id:e},function(e){t.resolve(e)},function(e){t.resolve({error:e})}),t.promise},save:function(t){var n=this,i=r.defer(),s={contactInfo:t.contactInfo,contactInfoTag:t.contactInfoTag,label:t.label,groupKeys:[e.data.connected.group.id]};return t.id?(s.id=t.id,o.update({id:t.id},s,function(e){i.resolve(e)},function(e){i.resolve({error:e})})):o.create(s,function(e){i.resolve(e)},function(e){i.resolve({error:e})}),i.promise},remove:function(e){var t=r.defer();return o.remove({id:e.id},function(e){t.resolve(e)},function(e){t.resolve({error:e})}),t.promise},verify:{initiate:function(e){var t=r.defer();return u.initiate({verificationMedium:e.contactInfoTag==="Email"?"Email":"SMS",verificationInfo:{address:e.contactInfo}},function(e){t.resolve(e)},function(e){t.resolve({error:e})}),t.promise},confirm:function(e,t){var n=r.defer();return u.confirm({verificationCode:e,id:t},function(e){n.resolve(e)},function(e){n.resolve({error:e})}),n.promise}}},s.prototype.groups={local:function(){return angular.fromJson(i.get("groups"))},list:function(){var e=r.defer();return f.query(function(t){i.add("groups",angular.toJson(t)),e.resolve(t)},function(t){e.resolve({error:t})}),e.promise},update:function(e){var t=r.defer();return f.update({id:e.id},{contactInfoIds:e.list},function(e){t.resolve(e)},function(e){t.resolve({error:e})}),t.promise}},s.prototype.blacklists={save:function(e){var t=r.defer();return o.create({contactInfo:e.contactInfo,contactInfoTag:"Phone",label:e.label},function(e){t.resolve(e)},function(e){t.resolve({error:e})}),t.promise},remove:function(e){var t=r.defer();return o.remove({id:e.id},function(e){t.resolve(e)},function(e){t.resolve({error:e})}),t.promise}},s.prototype.factory={process:function(){var t={groups:angular.fromJson(i.get("groups")),connections:angular.fromJson(i.get("connections")),settings:angular.fromJson(i.get("settings"))},n={account:{},connected:{},blacklist:{},settings:{sms:{status:!1,target:null,targets:[]},email:{status:!1,target:null,targets:[]}}},r=[],s=[],o={};return e.data={},angular.forEach(t.connections,function(e){o[e.id]=e}),angular.forEach(t.groups,function(e){switch(e.name){case"ConnectedNumbers":n.connected={group:e};break;case"BlackList":n.blacklist={group:e}}}),angular.forEach(t.connections,function(e){switch(e.contactInfoTag){case"Name":n.account.name=e.contactInfo;break;case"Email":n.account.email=e.contactInfo,o[e.id]=e;break;case"Address":n.account.address=e.contactInfo;break;case"PURCHASED_NUMBER":n.account.purchasedNumber=e.contactInfo;break;case"Phone":switch(e.label){case"Home":n.account.home=e.contactInfo;break;case"Personal":n.account.personal=e.contactInfo}o[e.id]=e}}),e.app.resources=n.account,angular.forEach(o,function(e){switch(e.contactInfoTag){case"Phone":r.push(e);break;case"Email":s.push(e)}}),angular.forEach(s,function(e){n.settings.email.targets.push({id:e.id,value:e.contactInfo})}),angular.forEach(r,function(e){n.settings.sms.targets.push({id:e.id,value:e.contactInfo})}),angular.forEach(t.settings,function(e){switch(e.medium){case"Email":n.settings.email.id=e.id,n.settings.email.status=e.targetContactInfos.length>0;var t=o[e.targetContactInfos[0]]?o[e.targetContactInfos[0]].id:n.settings.email.targets[0].id;n.settings.email.original=n.settings.email.target=e.targetContactInfos.length>0?t:n.settings.email.targets[0].id;break;case"SMS":n.settings.sms.id=e.id,n.settings.sms.status=e.targetContactInfos.length>0;var r=o[e.targetContactInfos[0]]?o[e.targetContactInfos[0]].id:n.settings.sms.targets[0].id;n.settings.sms.original=n.settings.sms.target=e.targetContactInfos.length>0?r:n.settings.sms.targets[0].id}}),n.connected.list=[],angular.forEach(n.connected.group.contactInfoIds,function(e){n.connected.list.push(o[e])}),n.blacklist.list=[],angular.forEach(n.blacklist.group.contactInfoIds,function(e){n.blacklist.list.push(o[e])}),e.data=n,console.info("data ->",e.data),!0}},new s}])});