define(["controllers/controllers","config"],function(e,t){e.controller("reporter",["$rootScope","$scope","Core",function(e,t,n){t.logs=[],t.pushMe=function(){console.log("pushed")},t.logs={local:function(){return n.connections.local()},list:function(){e.statusBar.display("Getting the list of recent calls.."),console.log("getting the list of recents"),t.logsLoading=!0,n.logs.list().then(function(n){e.statusBar.off(),t.logsLoading=!1,angular.forEach(n,function(t){angular.forEach(e.data.blacklist,function(e){t.blocked=t.address==e.contactInfo})}),t.logsList=n})},block:function(r){var i=this;e.statusBar.display("Adding a blacklisted number.."),n.blacklists.save({contactInfo:r.address,label:"From Logs"}).then(function(r){e.statusBar.display("Updating blacklist group..");var i=[];angular.forEach(e.data.blacklist,function(e){i.push(e.id)}),i.push(r.id),n.groups.update({id:e.data.groups.blacklist.id,list:i}).then(function(){e.statusBar.off(),console.log("coming to here"),t.logs.list(),e.$broadcast("refreshBlockedNumbers")})})},allow:function(e){console.log("allow log ->",e)}}}])});