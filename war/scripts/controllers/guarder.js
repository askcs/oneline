define(["controllers/controllers","config"],function(e,t){e.controller("guarder",["$rootScope","$scope","Core",function(e,t,n){t.blacklist={},t.blacklists={local:function(){},list:function(){e.statusBar.display("Getting the list of blacklisted numbers.."),n.groups.list().then(function(){n.connections.list().then(function(){e.statusBar.off(),t.blacklist={},n.factory.process()})})},save:function(){if(t.blacklist.label!==undefined||t.blacklist.contactInfo!==undefined){var r=this;e.statusBar.display("Adding a blacklisted number.."),n.blacklists.save(t.blacklist).then(function(t){e.statusBar.display("Updating blacklist group..");var i=[];angular.forEach(e.data.blacklist,function(e){i.push(e.id)}),i.push(t.id),n.groups.update({id:e.data.groups.blacklist.id,list:i}).then(function(){e.statusBar.off(),r.list()})})}},remove:function(t){var r=this,i=[];e.statusBar.display("Allowing a blacklisted number.."),angular.forEach(e.data.blacklist,function(e){e.id!==t.id&&i.push(e)}),n.blacklists.remove(t).then(function(){e.statusBar.display("Updating blacklist group..");var t=[];angular.forEach(i,function(e){t.push(e.id)}),n.groups.update({id:e.data.groups.blacklist.id,list:t}).then(function(){e.statusBar.off(),r.list()})})}},e.$on("refreshBlockedNumbers",function(){})}])});